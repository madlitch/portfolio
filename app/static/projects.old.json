[
  {
    "title": "Smart Medicine Cabinet",
    "tags": ["highlight", "school"],
    "subtitle": "Capstone Systems Design",
    "year": "2023-2024",
    "url": "https://github.com/madlitch/magicmirror",
    "keywords": "Raspberry Pi, IoT, FDM Printing, OnShape, MagicMirror, OpenCV, Node.js, Express, Sequelize, SQLite, MySQL, AWS RDS, AWS S3, Electron",
    "bulletpoints": [
      "Engineered and orchestrated the design and assembly of a smart medicine cabinet to enhance medication management for patients with dementia",
      "Implemented computer vision algorithms using Python and OpenCV for medication intake verification, ensuring accurate tracking of patient consumption",
      "Designed and 3D printed medication dispensers with solenoid actuation, addressing mechanical challenges to reliably dispense medication",
      "Established secure communication between the cabinet's hardware components and cloud server using RESTful APIs, ensuring data privacy and system integrity",
      "Facilitated remote caregiver monitoring through a web-based portal, enabling caregivers to manage patient profiles, medication schedules, and receive alerts on patient activity",
      "Orchestrated the design and assembly of the cabinet, optimizing for space and functionality while maintaining aesthetic appeal"
    ]
  },
  {
    "title": "Secure Purchase Order",
    "tags": ["school"],
    "subtitle": "Software & Computer Security",
    "year": "2024",
    "url": "https://github.com/madlitch/secure_purchase_order",
    "keywords": "FastAPI, PostgreSQL, Bootstrap, Docker, OpenPGP, SQLAlchemy",
    "bulletpoints": [
      "Secure purchase order management application with FastAPI, PostgreSQL, Bootstrap, and Docker",
      "Secure communication via encrypted and digitally signed emails compatible with OpenPGP-enabled clients",
      "Streamlined user registration and key management, auto-generating PGP keys and securely encrypting private keys with user-specific secrets",
      "Implemented a dual-signature protocol, leveraging user and server PGP keys for authentic and non-repudiable purchase orders",
      "Utilized PGPy for cryptographic security, ensuring end-to-end encryption and digital signatures across all data transactions.",
      "Automated transaction timestamping, embedding verifiable timestamps in purchase orders to secure transaction integrity"
    ]
  },
  {
    "title": "StringShare",
    "tags": ["highlight", "school"],
    "subtitle": "Distributed Systems",
    "year": "2023",
    "url": "https://github.com/madlitch/stringshare",
    "keywords": "FastAPI, PostgreSQL, Docker, SQLAlchemy, React Native",
    "bulletpoints": [
      "A decentralized social networking platform, inspired by Mastodon, utilizing FastAPI, PostgreSQL, and Docker",
      "Designed and implemented a publish-subscribe server-to-server communication protocol, enabling real-time data propagation and synchronization across decentralized server instances",
      "Scalable backend infrastructure leveraging Docker and Docker Compose for containerization and orchestration",
      "Single Version of Truth data consistency model, achieving immutable data across the network for clear data lineage",
      "RESTful API endpoints for a React Native application"
    ]
  },
  {
    "title": "CalorieCalculator",
    "tags": ["school"],
    "subtitle": "Mobile Application Development",
    "year": "2023",
    "url": "https://github.com/madlitch/CalorieCalculator",
    "keywords": "Flutter, Dart",
    "bulletpoints": [
      "A decentralized social networking platform, inspired by Mastodon, utilizing FastAPI, PostgreSQL, and Docker",
      "Designed and implemented a publish-subscribe server-to-server communication protocol, enabling real-time data propagation and synchronization across decentralized server instances",
      "Scalable backend infrastructure leveraging Docker and Docker Compose for containerization and orchestration",
      "Single Version of Truth data consistency model, achieving immutable data across the network for clear data lineage",
      "RESTful API endpoints for a React Native application"
    ]
  },
  {
    "title": "Genesis Financials",
    "tags": ["school"],
    "subtitle": "Data Management Systems",
    "year": "2022",
    "url": "https://github.com/DaanyaalTahir/genesis-financials",
    "keywords": "",
    "bulletpoints": [
      "Online Banking System with fully functional insights, money transfers, statements, and loans, written with React.js and Node.js",
      "Created Entity Relationship and Schema diagrams for the database system",
      "Assisted with the creation of information views for the insights page",
      "Generated and filled database with mock data",
      "Designed and implemented the loans system"
    ]
  },
  {
    "title": "MadPixelSort",
    "tags": ["current", "highlight", "startup"],
    "subtitle": "Commercial Application",
    "year": "2021-2022",
    "url": "https://madpixel.software/madpixelsort",
    "keywords": "Rust, JavaScript, HTML, CSS, Electron, ffmpeg, Neon Bindings, Bootstrap, JQuery",
    "bulletpoints": [
      "Cross-platform desktop app for producing pixel sorting effects using Electron and Neon Bindings",
      "Single-handedly conceptualized, built, and brought to market with commercial success",
      "Implemented a multi-threaded Rust algorithm that can sort 24 million pixels in under 500 ms",
      "Designed an intuitive & responsive UI from scratch in HTML, CSS, JavaScript, and JQuery",
      "Keyframing/effect animation system to allow smooth transitions in animations and video",
      "Implemented a custom cryptographic DRM/activation system, tying a license key activation to a user on a per machine basis"
    ]
  },
  {
    "title": "MadPixel Software",
    "tags": ["current", "highlight", "startup"],
    "subtitle": "Website &  API",
    "year": "2022",
    "url": "https://madpixel.software",
    "keywords": "",
    "bulletpoints": [
      "Official website for MADPIXEL SOFTWARE INC.",
      "Website built from scratch with Bootstrap, JQuery, and Sass, with custom CSS text glitch effects",
      "Python (FastAPI) Async REST backend server for website hosting, app licensing, and payment processing",
      "PostgreSQL database using SQLAlchemy ORM mapping for customer and licensing information",
      "Webserver and database hosted within respective Docker containers using Docker Compose",
      "Stripe integration for payment processing with Stripe Checkout"
    ]
  },
  {
    "title": "Planit",
    "tags": ["startup"],
    "subtitle": "Commercial Application",
    "year": "2019 - 2022",
    "url": "",
    "keywords": "",
    "bulletpoints": [
      "iOS & Android social media mobile app written in Flutter",
      "Designed, prototyped, and iterated a frontend UI in Framer",
      "Designed and implemented a production ready database schema including user relations (friends/groups), user interests, location history, messaging, events, venues, and more",
      "Implemented an algorithm finding the median coordinate from a list of user coordinates, then querying Google Places for relevant venues around the median based on user interests",
      "Wrote an async REST API with user, friend, event, and geolocation management, with OAuth2 authentication and credential hashing/salting"
    ]
  },
  {
    "title": "Social Calendar",
    "tags": ["school"],
    "subtitle": "Software Design & Architecture",
    "year": "2021",
    "url": "https://github.com/madlitch/SOFE3650-Social-Calendar",
    "keywords": "",
    "bulletpoints": [
      "Desktop social calendar system that allowed for users to share events with their friends",
      "Developed and designed using ADD (Attribute Driven Design) iterations, starting from original use cases, quality attributes, constraints, and concerns",
      "Showcases the full ADD process with a comprehensive timeline of architectural design decisions and iterations"
    ]
  },
  {
    "title": "OnTech Movies",
    "tags": ["school"],
    "subtitle": "Web Programming",
    "year": "2020",
    "url": "https://github.com/madlitch/ONTech-Movies",
    "keywords": "",
    "bulletpoints": [
      "Full-stack movie booking system with a Flask backend and Web (Rendered with Jinja) frontend",
      "Fully featured account and invoicing system",
      "Can book seats using a visualization of available seats and times"
    ]
  },
  {
    "title": "Galton Board Simulation",
    "tags": ["school"],
    "subtitle": "Data Structures",
    "year": "2020",
    "url": "https://github.com/madlitch/galtonboard",
    "keywords": "",
    "bulletpoints": [
      "Simulated Galton Board for showcasing a normal distribution when n balls are dropped into m bins through a tree-like pattern of pegs",
      "Designed and implemented a recursive algorithm that simulates the path of a ball by traversing a graph representing the network of pegs, stored in a linear array",
      "Algorithm resulted in a worst-case time complexity of O(n)"
    ]
  }
]
